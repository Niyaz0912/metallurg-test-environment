// src/features/productionPlans/ProductionPlansPage.tsx
import React, { useState, useEffect } from 'react';
import { ProductionPlansList } from './components/ProductionPlanList';
import { ProductionPlan, CreateProductionPlanData } from './productionPlansTypes';
import { useAuth } from '../auth/hooks/useAuth';

export const ProductionPlansPage = () => {
  const [plans, setPlans] = useState<ProductionPlan[]>([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string>('');
  const { user } = useAuth();

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  const userRole = user?.role || 'employee';

  useEffect(() => {
    fetchPlans();
  }, []);

  // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ API –≤–º–µ—Å—Ç–æ mock –¥–∞–Ω–Ω—ã—Ö
  const fetchPlans = async () => {
    try {
      setLoading(true);
      setError('');

      const token = localStorage.getItem('token');
      if (!token) {
        setError('–¢–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω');
        return;
      }

      console.log('üîÑ –ó–∞–≥—Ä—É–∑–∫–∞ –ø–ª–∞–Ω–æ–≤ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ –∏–∑ API...');

      const response = await fetch('/api/productionPlans', {
        method: 'GET',
        headers: {
          'Authorization': `Bearer ${token}`,
          'Content-Type': 'application/json'
        }
      });

      console.log('üìù –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞ API:', response.status);

      if (response.ok) {
        const data = await response.json();
        console.log('‚úÖ –ü–æ–ª—É—á–µ–Ω—ã –ø–ª–∞–Ω—ã –∏–∑ –ë–î:', data);

        // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –Ω—É–∂–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç
        const formattedPlans: ProductionPlan[] = data.map((plan: any) => ({
          id: plan.id,
          orderName: plan.orderName,
          customerName: plan.customerName,
          quantity: plan.quantity,
          deadline: new Date(plan.deadline).toISOString().split('T')[0], // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —Ñ–æ—Ä–º–∞—Ç YYYY-MM-DD
          progressPercent: plan.progressPercent || 0
        }));

        setPlans(formattedPlans);
        console.log(`üìä –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${formattedPlans.length} –ø–ª–∞–Ω–æ–≤ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞`);
      } else {
        const errorData = await response.json().catch(() => ({ error: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' }));
        setError(errorData.error || `–û—à–∏–±–∫–∞ ${response.status}`);
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–ª–∞–Ω–æ–≤:', response.status, errorData);
      }
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –ø–ª–∞–Ω–æ–≤:', error);
      setError('–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º');
    } finally {
      setLoading(false);
    }
  };

  const handleCreatePlan = async (data: CreateProductionPlanData) => {
    try {
      const token = localStorage.getItem('token');
      const response = await fetch('/api/productionPlans', {
        method: 'POST',
        headers: {
          'Authorization': `Bearer ${token}`,
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(data)
      });

      if (response.ok) {
        console.log('‚úÖ –ü–ª–∞–Ω —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ');
        // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–ª–∞–Ω–æ–≤
        await fetchPlans();
      } else {
        const errorData = await response.json();
        console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞–Ω–∞:', errorData);
        alert(`–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞–Ω–∞: ${errorData.error}`);
      }
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞–Ω–∞:', error);
      alert('–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º');
    }
  };

  const handleUpdatePlan = async (id: number, data: CreateProductionPlanData) => {
    try {
      const token = localStorage.getItem('token');
      const response = await fetch(`/api/productionPlans/${id}`, {
        method: 'PUT',
        headers: {
          'Authorization': `Bearer ${token}`,
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(data)
      });

      if (response.ok) {
        console.log('‚úÖ –ü–ª–∞–Ω –æ–±–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ');
        // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–ª–∞–Ω–æ–≤
        await fetchPlans();
      } else {
        const errorData = await response.json();
        console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–ª–∞–Ω–∞:', errorData);
        alert(`–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–ª–∞–Ω–∞: ${errorData.error}`);
      }
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–ª–∞–Ω–∞:', error);
      alert('–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º');
    }
  };

  const handleDeletePlan = async (id: number) => {
    if (!confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç –ø–ª–∞–Ω?')) {
      return;
    }

    try {
      const token = localStorage.getItem('token');
      const response = await fetch(`/api/productionPlans/${id}`, {
        method: 'DELETE',
        headers: {
          'Authorization': `Bearer ${token}`,
          'Content-Type': 'application/json'
        }
      });

      if (response.ok) {
        console.log('‚úÖ –ü–ª–∞–Ω —É–¥–∞–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ');
        // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–ª–∞–Ω–æ–≤
        await fetchPlans();
      } else {
        const errorData = await response.json();
        console.error('‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø–ª–∞–Ω–∞:', errorData);
        alert(`–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø–ª–∞–Ω–∞: ${errorData.error}`);
      }
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø–ª–∞–Ω–∞:', error);
      alert('–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º');
    }
  };

  const handleViewPlan = (id: number) => {
    console.log('üëÅÔ∏è –ü—Ä–æ—Å–º–æ—Ç—Ä –ø–ª–∞–Ω–∞', id);
    alert(`–ü–µ—Ä–µ—Ö–æ–¥ –∫ –¥–µ—Ç–∞–ª—å–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ø–ª–∞–Ω–∞ ${id}`);
  };

  if (loading) {
    return (
      <div className="flex justify-center items-center p-8">
        <div className="text-lg">–ó–∞–≥—Ä—É–∑–∫–∞ –ø–ª–∞–Ω–æ–≤ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞...</div>
      </div>
    );
  }

  if (error) {
    return (
      <div className="flex flex-col justify-center items-center p-8">
        <div className="text-red-600 text-lg mb-4">‚ùå {error}</div>
        <button 
          onClick={fetchPlans}
          className="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700"
        >
          –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
        </button>
      </div>
    );
  }

  return (
    <div>
      <div className="mb-6">
        <h1 className="text-2xl font-bold text-gray-900 mb-2">
          üìã –ü–ª–∞–Ω—ã –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞
        </h1>
        <p className="text-gray-600">
          –í—Å–µ–≥–æ –ø–ª–∞–Ω–æ–≤: <span className="font-semibold">{plans.length}</span>
        </p>
      </div>

      <ProductionPlansList
        plans={plans}
        userRole={userRole}
        onCreatePlan={handleCreatePlan}
        onUpdatePlan={handleUpdatePlan}
        onDeletePlan={handleDeletePlan}
        onViewPlan={handleViewPlan}
      />
    </div>
  );
};

export default ProductionPlansPage;



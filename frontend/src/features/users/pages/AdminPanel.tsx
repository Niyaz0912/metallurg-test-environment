// frontend/src/features/users/AdminPanel.tsx
import React, { useState, useEffect } from 'react';

import { useAuth } from '../../auth/hooks/useAuth';
import ProductionPlansManager from '../../productionPlans/components/ProductionPlansManager';
import UserCreateForm from '../components/UserCreateForm';
import UserList from '../components/UserList';
// ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –∏–º–ø–æ—Ä—Ç –∏–∑ —Ç–µ—Ö–∫–∞—Ä—Ç
import TechCardsManager from '../../techCard/components/TechCardsManager';

interface User {
  id: number;
  firstName: string;
  lastName: string;
  username: string;
  role: string;
  phone?: string;
  department: {
    id: number;
    name: string;
  } | null;
}

const AdminPanel: React.FC = () => {
  const { user, loading } = useAuth();
  const [users, setUsers] = useState<User[]>([]);
  const [showCreateForm, setShowCreateForm] = useState(false);
  const [loadingUsers, setLoadingUsers] = useState(true);
  const [activeSection, setActiveSection] = useState<'users' | 'plans' | 'techcards'>('users');

  useEffect(() => {
    fetchUsers();
  }, []);

  const fetchUsers = async () => {
    try {
      const token = localStorage.getItem('token');
      if (!token) return;

      const response = await fetch('/api/users', {
        headers: {
          'Authorization': `Bearer ${token}`,
          'Content-Type': 'application/json'
        }
      });

      if (response.ok) {
        const data = await response.json();
        setUsers(data);
      } else {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', response.status);
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', error);
    } finally {
      setLoadingUsers(false);
    }
  };

  const handleUserCreated = () => {
    setShowCreateForm(false); // Close the form after creation
    fetchUsers(); // Refresh the user list
  };

  const handleUserDeleted = () => {
    fetchUsers(); // Refresh the user list
  };

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
  if (!user || user.role !== 'admin') {
    return (
      <div className="text-center py-8">
        <h2 className="text-2xl font-bold text-red-600 mb-4">–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω</h2>
        <p>–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.</p>
      </div>
    );
  }

  if (loading || loadingUsers) {
    return (
      <div className="flex items-center justify-center h-64">
        <div className="text-lg">–ó–∞–≥—Ä—É–∑–∫–∞ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏...</div>
      </div>
    );
  }

  return (
    <div className="space-y-6">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="bg-red-50 border-l-4 border-red-400 p-4">
        <div className="flex items-center">
          <div className="ml-3">
            <h1 className="text-2xl font-bold text-red-900">
              üîß –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
            </h1>
            <p className="text-red-700 mt-1">
              –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user.firstName} {user.lastName}
            </p>
          </div>
        </div>
      </div>

      {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —Å–µ–∫—Ü–∏—è–º */}
      <div className="bg-white rounded-lg shadow p-6">
        <div className="flex space-x-4 mb-6">
          <button
            onClick={() => setActiveSection('users')}
            className={`px-4 py-2 rounded ${
              activeSection === 'users' 
                ? 'bg-blue-600 text-white' 
                : 'bg-gray-200 text-gray-700 hover:bg-gray-300'
            }`}
          >
            üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
          </button>
          <button
            onClick={() => setActiveSection('plans')}
            className={`px-4 py-2 rounded ${
              activeSection === 'plans' 
                ? 'bg-blue-600 text-white' 
                : 'bg-gray-200 text-gray-700 hover:bg-gray-300'
            }`}
          >
            üìã –ü–ª–∞–Ω—ã –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞
          </button>
          <button
            onClick={() => setActiveSection('techcards')}
            className={`px-4 py-2 rounded ${
              activeSection === 'techcards' 
                ? 'bg-blue-600 text-white' 
                : 'bg-gray-200 text-gray-700 hover:bg-gray-300'
            }`}
          >
            üìÑ –¢–µ—Ö–∫–∞—Ä—Ç—ã
          </button>
        </div>

        {/* –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–µ–∫—Ü–∏–π */}
        {activeSection === 'users' && (
          <div>
            <div className="flex justify-between items-center mb-4">
              <h2 className="text-xl font-semibold">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏</h2>
              <button
                onClick={() => setShowCreateForm(!showCreateForm)}
                className="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700"
              >
                {showCreateForm ? '–û—Ç–º–µ–Ω–∏—Ç—å' : '+ –°–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'}
              </button>
            </div>

            {showCreateForm && (
              <div className="mb-6 p-4 bg-gray-50 rounded">
                <UserCreateForm onUserCreated={handleUserCreated} />
              </div>
            )}

            <UserList 
              users={users} 
              onUserDeleted={handleUserDeleted}
            />
          </div>
        )}

        {activeSection === 'plans' && (
          <ProductionPlansManager />
        )}

        {activeSection === 'techcards' && (
          <TechCardsManager />
        )}
      </div>

      {/* –°—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        <div className="bg-white rounded-lg shadow p-6">
          <h3 className="text-lg font-semibold mb-2">üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h3>
          <p className="text-gray-600 mb-4">–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã</p>
          <div className="text-2xl font-bold text-blue-600">
            {users.length} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
          </div>
        </div>

        <div className="bg-white rounded-lg shadow p-6">
          <h3 className="text-lg font-semibold mb-2">‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏</h3>
          <p className="text-gray-600 mb-4">–°–∏—Å—Ç–µ–º–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏</p>
          <button className="bg-gray-600 text-white px-4 py-2 rounded hover:bg-gray-700">
            –û—Ç–∫—Ä—ã—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
          </button>
        </div>

        <div className="bg-white rounded-lg shadow p-6">
          <h3 className="text-lg font-semibold mb-2">üìù –õ–æ–≥–∏</h3>
          <p className="text-gray-600 mb-4">–°–∏—Å—Ç–µ–º–Ω—ã–µ –ª–æ–≥–∏ –∏ –∞—É–¥–∏—Ç</p>
          <button className="bg-purple-600 text-white px-4 py-2 rounded hover:bg-purple-700">
            –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏
          </button>
        </div>
      </div>
    </div>
  );
};

export default AdminPanel;


'use strict';

module.exports = {
  async up(queryInterface, Sequelize) {
    try {
      console.log('üîß –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –ø–ª–∞–Ω–æ–≤ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞...');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —É–∂–µ –ø–ª–∞–Ω—ã –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞
      const [results] = await queryInterface.sequelize.query(
        'SELECT COUNT(*) as count FROM production_plans'
      );
      
      if (results[0].count > 0) {
        console.log('‚ö†Ô∏è –ü–ª–∞–Ω—ã –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É...');
        return;
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ tech_cards (–Ω—É–∂–Ω—ã –¥–ª—è foreign key)
      const [techCards] = await queryInterface.sequelize.query(
        'SELECT COUNT(*) as count FROM tech_cards'
      );
      
      console.log(`üìã –ù–∞–π–¥–µ–Ω–æ tech_cards: ${techCards[0].count}`);
      
      return await queryInterface.bulkInsert('production_plans', [
        {
          id: 1,
          customerName: '–û–û–û –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã',
          orderName: '–ó–∞–∫–∞–∑ ‚Ññ2024-001 - –ö–æ—Ä–ø—É—Å–Ω—ã–µ –¥–µ—Ç–∞–ª–∏',
          quantity: 100,
          completedQuantity: 25,
          progressPercent: 25.0,
          deadline: new Date('2024-03-01'),
          status: 'in_progress',
          priority: 3,
          notes: '–°—Ä–æ—á–Ω—ã–π –∑–∞–∫–∞–∑, —Ç—Ä–µ–±—É–µ—Ç –æ—Å–æ–±–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è –∫–∞—á–µ—Å—Ç–≤–∞',
          techCardId: techCards[0].count >= 1 ? 1 : null, // –°—Å—ã–ª–∞–µ–º—Å—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ tech_card —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
          createdAt: new Date(),
          updatedAt: new Date()
        },
        {
          id: 2,
          customerName: '–ê–û –ú–∞—à–∏–Ω–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ',
          orderName: '–ó–∞–∫–∞–∑ ‚Ññ2024-002 - –†–æ–ª–∏–∫–æ–≤—ã–µ –º–µ—Ö–∞–Ω–∏–∑–º—ã',
          quantity: 50,
          completedQuantity: 0,
          progressPercent: 0.0,
          deadline: new Date('2024-04-15'),
          status: 'planned',
          priority: 2,
          notes: '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø–ª–∞–Ω –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞',
          techCardId: techCards[0].count >= 2 ? 2 : null,
          createdAt: new Date(),
          updatedAt: new Date()
        },
        {
          id: 3,
          customerName: '–ü–ê–û –õ–æ–≥–∏—Å—Ç–∏–∫–∞',
          orderName: '–ó–∞–∫–∞–∑ ‚Ññ2024-003 - –ü—Ä–∏–≤–æ–¥–Ω—ã–µ –≤–∞–ª—ã',
          quantity: 75,
          completedQuantity: 75,
          progressPercent: 100.0,
          deadline: new Date('2024-02-28'),
          status: 'completed',
          priority: 1,
          notes: '–ó–∞–∫–∞–∑ –≤—ã–ø–æ–ª–Ω–µ–Ω –≤ —Å—Ä–æ–∫, –∫–∞—á–µ—Å—Ç–≤–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º',
          techCardId: techCards[0].count >= 3 ? 3 : null,
          createdAt: new Date(),
          updatedAt: new Date()
        },
        {
          id: 4,
          customerName: '–ó–ê–û –ú–µ—Ç–∞–ª–ª—É—Ä–≥–∏—è',
          orderName: '–ó–∞–∫–∞–∑ ‚Ññ2024-004 - –ó–∞–ø—á–∞—Å—Ç–∏ –¥–ª—è —Ä–µ–º–æ–Ω—Ç–∞',
          quantity: 25,
          completedQuantity: 10,
          progressPercent: 40.0,
          deadline: new Date('2024-05-10'),
          status: 'in_progress',
          priority: 2,
          notes: '–ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ —Å–æ–≥–ª–∞—Å–Ω–æ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –∑–∞–∫–∞–∑—á–∏–∫–∞',
          techCardId: null, // –ë–µ–∑ –ø—Ä–∏–≤—è–∑–∫–∏ –∫ —Ç–µ—Ö–∫–∞—Ä—Ç–µ
          createdAt: new Date(),
          updatedAt: new Date()
        }
      ], {});
      
    } catch (error) {
      console.error('‚ùå –û–®–ò–ë–ö–ê –≤ Production Plans Seeder:', error.message);
      throw error;
    }
  },

  async down(queryInterface, Sequelize) {
    return queryInterface.bulkDelete('production_plans', null, {});
  }
};


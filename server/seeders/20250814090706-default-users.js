'use strict';
const bcrypt = require('bcrypt');

module.exports = {
  async up(queryInterface, Sequelize) {
    try {
      console.log('üîß –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —É–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
      const [results] = await queryInterface.sequelize.query(
        'SELECT COUNT(*) as count FROM users'
      );
      
      if (results[0].count > 0) {
        console.log('‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É...');
        console.log(`üë• –ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${results[0].count}`);
        return;
      }
      
      console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ users –ø—É—Å—Ç–∞—è, –∑–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...');
      
      // –•—ç—à–∏—Ä—É–µ–º –ø–∞—Ä–æ–ª—å –¥–ª—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–ø–∞—Ä–æ–ª—å: 123456)
      const testPassword = await bcrypt.hash('123456', 10);
      
      return await queryInterface.bulkInsert('users', [
        {
          id: 1,
          username: 'admin',
          firstName: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
          lastName: '–°–∏—Å—Ç–µ–º—ã',
          role: 'admin',
          phone: '+7-917-123-4567',
          masterId: null,
          passwordHash: testPassword,
          departmentId: 1, // –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è
          position: '–°–∏—Å—Ç–µ–º–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
          createdAt: new Date(),
          updatedAt: new Date()
        },
        {
          id: 2,
          username: 'director1',
          firstName: '–ò–≤–∞–Ω',
          lastName: '–ü–µ—Ç—Ä–æ–≤',
          role: 'director',
          phone: '+7-917-234-5678',
          masterId: null,
          passwordHash: testPassword,
          departmentId: 1, // –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è
          position: '–î–∏—Ä–µ–∫—Ç–æ—Ä –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞',
          createdAt: new Date(),
          updatedAt: new Date()
        },
        {
          id: 3,
          username: 'master1',
          firstName: '–°–µ—Ä–≥–µ–π',
          lastName: '–°–∏–¥–æ—Ä–æ–≤',
          role: 'master',
          phone: '+7-917-345-6789',
          masterId: null,
          passwordHash: testPassword,
          departmentId: 2, // –û–¢–ö
          position: '–ú–∞—Å—Ç–µ—Ä –∫–æ–Ω—Ç—Ä–æ–ª—è –∫–∞—á–µ—Å—Ç–≤–∞',
          createdAt: new Date(),
          updatedAt: new Date()
        },
        {
          id: 4,
          username: 'employee1',
          firstName: '–ê–ª–µ–∫—Å–µ–π',
          lastName: '–ò–≤–∞–Ω–æ–≤',
          role: 'employee',
          phone: '+7-917-456-7890',
          masterId: 3, // –ü–æ–¥—á–∏–Ω—è–µ—Ç—Å—è –º–∞—Å—Ç–µ—Ä—É –°–µ—Ä–≥–µ—é
          passwordHash: testPassword,
          departmentId: 2, // –û–¢–ö  
          position: '–ö–æ–Ω—Ç—Ä–æ–ª–µ—Ä –∫–∞—á–µ—Å—Ç–≤–∞',
          createdAt: new Date(),
          updatedAt: new Date()
        },
        {
          id: 5,
          username: 'employee2',
          firstName: '–ú–∏—Ö–∞–∏–ª',
          lastName: '–ö–æ–∑–ª–æ–≤',
          role: 'employee',
          phone: '+7-917-567-8901',
          masterId: 3, // –¢–∞–∫–∂–µ –ø–æ–¥—á–∏–Ω—è–µ—Ç—Å—è –º–∞—Å—Ç–µ—Ä—É
          passwordHash: testPassword,
          departmentId: 1, // –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è
          position: '–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—é',
          createdAt: new Date(),
          updatedAt: new Date()
        }
      ], {});
      
    } catch (error) {
      console.error('‚ùå –î–ï–¢–ê–õ–¨–ù–ê–Ø –û–®–ò–ë–ö–ê –≤ Users Seeder:');
      console.error('–°–æ–æ–±—â–µ–Ω–∏–µ:', error.message);
      console.error('–¢–∏–ø –æ—à–∏–±–∫–∏:', error.name);
      if (error.original) {
        console.error('–ö–æ–¥ –æ—à–∏–±–∫–∏:', error.original.errno);
        console.error('SQL —Å–æ–æ–±—â–µ–Ω–∏–µ:', error.original.sqlMessage);
      }
      throw error;
    }
  },

  async down(queryInterface, Sequelize) {
    return queryInterface.bulkDelete('users', null, {});
  }
};



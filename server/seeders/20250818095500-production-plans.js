'use strict';

module.exports = {
  async up(queryInterface) {
    console.log('üöÄ –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø–ª–∞–Ω—ã...');
    
    const plans = [
      {
        id: 1,
        customerName: '–û–û–û –ó–∞–∫–∞–∑—á–∏–∫ 1',
        orderName: 'ORD-001',
        quantity: 100,
        completedQuantity: 0,
        progressPercent: 0,
        deadline: new Date(new Date().setMonth(new Date().getMonth() + 1)),
        status: 'planned',
        techCardId: 1,
        priority: 1,
        notes: '–ü–µ—Ä–≤—ã–π –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã–π –ø–ª–∞–Ω',
        createdAt: new Date(),
        updatedAt: new Date()
      },
      {
        id: 2,
        customerName: '–ê–û –ü—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ—Å—Ç—å',
        orderName: 'ORD-002',
        quantity: 50,
        completedQuantity: 10,
        progressPercent: 20,
        deadline: new Date(new Date().setDate(new Date().getDate() + 30)),
        status: 'in_progress',
        techCardId: 2,
        priority: 2,
        notes: null,
        createdAt: new Date(),
        updatedAt: new Date()
      },
      {
        id: 3,
        customerName: '–ó–ê–û –ú–µ—Ç–∞–ª–ª—É—Ä–≥–∏—è',
        orderName: 'ORD-003',
        quantity: 200,
        completedQuantity: 200,
        progressPercent: 100,
        deadline: new Date(new Date().setDate(new Date().getDate() - 10)),
        status: 'completed',
        techCardId: 3,
        priority: 3,
        notes: '–ó–∞–≤–µ—Ä—à—ë–Ω–Ω—ã–π –∑–∞–∫–∞–∑',
        createdAt: new Date(),
        updatedAt: new Date()
      }
    ];

    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø–ª–∞–Ω—ã –ø–æ orderName (–∏–¥–µ–º–ø–æ—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å)
    for (const plan of plans) {
      await queryInterface.bulkUpdate(
        'production_plans',
        {
          customerName: plan.customerName,
          quantity: plan.quantity,
          completedQuantity: plan.completedQuantity,
          progressPercent: plan.progressPercent,
          deadline: plan.deadline,
          status: plan.status,
          techCardId: plan.techCardId,
          priority: plan.priority,
          notes: plan.notes,
          updatedAt: new Date(),
        },
        { orderName: plan.orderName }
      );
    }

    // –í—Å—Ç–∞–≤–ª—è–µ–º –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –ø–ª–∞–Ω—ã
    await queryInterface.bulkInsert('production_plans', plans, {
      ignoreDuplicates: true,
      validate: false, // –ò–∑–±–µ–≥–∞–µ–º –ø—Ä–æ–±–ª–µ–º —Å —Ö—É–∫–∞–º–∏ –º–æ–¥–µ–ª–∏
    });

    console.log('‚úÖ –ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø–ª–∞–Ω—ã —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
  },

  async down(queryInterface) {
    await queryInterface.bulkDelete('production_plans', {
      orderName: ['ORD-001', 'ORD-002', 'ORD-003']
    });
  }
};


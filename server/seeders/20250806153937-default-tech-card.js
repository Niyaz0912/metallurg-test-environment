'use strict';

module.exports = {
  async up(queryInterface, Sequelize) {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∑–∞–ø–∏—Å—å —Å ID = 1
    const existingCard = await queryInterface.sequelize.query(
      'SELECT id FROM tech_cards WHERE id = 1',
      { type: Sequelize.QueryTypes.SELECT }
    );

    // –°–æ–∑–¥–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∑–∞–ø–∏—Å–∏ –Ω–µ—Ç
    if (existingCard.length === 0) {
      await queryInterface.bulkInsert('tech_cards', [
        {
          id: 1,
          productName: '–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –∫–∞—Ä—Ç–∞',
          description: '–ë–∞–∑–æ–≤–∞—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∫–∞—Ä—Ç–∞ –¥–ª—è –≤—Å–µ—Ö –æ–ø–µ—Ä–∞—Ü–∏–π',
          specifications: JSON.stringify({
            type: 'universal',
            applicableOperations: ['machining', 'assembly', 'quality_control']
          }),
          operationSteps: JSON.stringify([
            { step: 1, description: '–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è' },
            { step: 2, description: '–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏' },
            { step: 3, description: '–ö–æ–Ω—Ç—Ä–æ–ª—å –∫–∞—á–µ—Å—Ç–≤–∞' }
          ]),
          createdAt: new Date(),
          updatedAt: new Date()
        }
      ], {});

      console.log('‚úÖ –ë–∞–∑–æ–≤–∞—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∫–∞—Ä—Ç–∞ —Å–æ–∑–¥–∞–Ω–∞');
    } else {
      console.log('‚ÑπÔ∏è –ë–∞–∑–æ–≤–∞—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∫–∞—Ä—Ç–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
    }
  },

  async down(queryInterface, Sequelize) {
    await queryInterface.bulkDelete('tech_cards', { id: 1 }, {});
    console.log('üóëÔ∏è –ë–∞–∑–æ–≤–∞—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∫–∞—Ä—Ç–∞ —É–¥–∞–ª–µ–Ω–∞');
  }
};


'use strict';

const db = require('./models');
const path = require('path');

async function runSeeders() {
  try {
    console.log('üå± –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∏–¥–µ—Ä—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ...');

    const seeders = [
      '20250818094000-departments.js',
      '20250818094500-users.js',
      '20250818095000-tech-cards.js',
      '20250818095500-production-plans.js',
      '20250818100000-assignments.js',
      '20250909100000-add-test-assignments.js'
    ];

    const queryInterface = db.sequelize.getQueryInterface();

    for (const file of seeders) {
      const seeder = require(path.join(__dirname, 'seeders', file));

      if (seeder.up && typeof seeder.up === 'function') {
        console.log(`üìù –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∏–¥–µ—Ä: ${file}`);
        await seeder.up(queryInterface, db.Sequelize);
        console.log(`‚úÖ –°–∏–¥–µ—Ä ${file} –≤—ã–ø–æ–ª–Ω–µ–Ω`);
      } else {
        console.log(`‚ö†Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –Ω–µ–ø–æ–¥—Ö–æ–¥—è—â–∏–π —Ñ–∞–π–ª: ${file}`);
      }
    }

    console.log('‚úÖ –í—Å–µ —Å–∏–¥–µ—Ä—ã –≤—ã–ø–æ–ª–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Å–∏–¥–µ—Ä–æ–≤:', error);
    console.error('Stack:', error.stack);
  } finally {
    await db.sequelize.close();
    process.exit(0);
  }
}

runSeeders();
